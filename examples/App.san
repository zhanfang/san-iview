<template>
<div>
    <icon type="ionic"></icon>
    <select value="{=model1=}" style="width:200px">
        <select-option
            s-for="item in cityList"
            label="{{item.label}}"
            value="{{item.value}}">
            {{ item.label }}
        </select-option>
    </select>
    <select value="{=model2=}" style="width:200px">
        <select-option
            s-for="item in cityList"
            label="{{item.label}}"
            value="{{item.value}}">
            {{ item.label }}
        </select-option>
    </select>
    <p style="margin-top: 9px">
        <circle percent="{{80}}">
            <span>80%</span>
        </circle>
    </p>
    <div style="width:20%">
        <i-form
            model="{=formValidate=}"
            rules="{{ruleValidate}}"
            labelWidth="{{100}}"
            s-ref="formValidate">
            <form-item 
                label="姓名" 
                prop="name"
                desc="测试"
                tip
                descPos="up-left"
                descLen="medium">
                <i-input value="{=formValidate.name=}" placeholder="请输入姓名"></i-input>
            </form-item>
            <form-item label="邮箱" prop="mail">
                <i-input value="{=formValidate.mail=}" placeholder="请输入邮箱"></i-input>
            </form-item>
            <form-item label="城市" prop="city">
                <Select value="{=formValidate.city=}" placeholder="请选择所在地">
                    <select-option value="beijing">北京市</select-option>
                    <select-option value="shanghai">上海市</select-option>
                    <select-option value="shenzhen">深圳市</select-option>
                </Select>
            </form-item>
            <form-item label="性别" prop="gender">
                <radio-group label="{=formValidate.gender=}">
                    <Radio label="male">男</Radio>
                    <Radio label="female">女</Radio>
                </radio-group>
            </form-item>
            <form-item label="爱好" prop="interest">
                <checkbox-group value="{=formValidate.interest=}">
                    <checkbox label="吃饭"></checkbox>
                    <checkbox label="睡觉"></checkbox>
                    <checkbox label="跑步"></checkbox>
                    <checkbox label="看电影"></checkbox>
                </checkbox-group>
            </form-item>
            <form-item label="介绍" prop="desc">
                <i-input value="{=formValidate.desc=}" type="textarea" autosize="{{autosize}}" placeholder="请输入..."></i-input>
            </form-item>
            <form-item label="上传图片" prop="img">
                <upload>
                     <i-button type="ghost" icon="ios-cloud-upload-outline">
                </upload>
            </form-item>
            <form-item>
                <i-btn type="primary" on-select="handleSubmit('formValidate')">提交</i-btn>
                <i-btn type="ghost" on-select="handleReset('formValidate')" style="margin-left: 8px">重置</i-btn>
            </form-item>
        </i-form>
    </div>
    <button data-balloon="Whats up!" data-balloon-pos="up">Hover me!</button>
    <dropdown>
        <a href="javascript:void(0)">
            hover 触发
            <Icon type="arrow-down-b"></Icon>
        </a>
        <dropdown-menu slot="list">
            <dropdown-item>驴打滚</dropdown-item>
            <dropdown-item>炸酱面</dropdown-item>
            <dropdown-item>豆汁儿</dropdown-item>
            <dropdown-item>冰糖葫芦</dropdown-item>
            <dropdown-item>北京烤鸭</dropdown-item>
        </dropdown-menu>
    </dropdown>
    <!-- 10代表的是11月 -->
    <i-input></i-input>
    <date 
        value="{=date=}"
        type="date"
        placeholder="Select date"
        style="width: 215px"
        options="{{options}}"
        on-change="handleDate($event)">

    </date>
    <color-picker></color-picker>
    <time 
        value="{=date=}"
        type="time"
        placeholder="Select date"
        style="width: 168px"
        on-change="handleDate($event)"></time>
</div>
</template>
<script>
import {Button, Icon, Select, Circle, Input, Menu, Form, Dropdown, DatePicker, ColorPicker, TimePicker, Upload} from '../src/index';

export default {
    components: {
        'i-button': Button,
        'icon': Icon,
        'select': Select,
        'select-option': Select.Option,
        'circle': Circle,
        'i-input': Input,
        'menu': Menu,
        'i-form': Form,
        'form-item': Form.Item,
        'dropdown': Dropdown,
        'dropdown-menu': Dropdown.Menu,
        'dropdown-item': Dropdown.Item,
        'date': DatePicker,
        'color-picker': ColorPicker,
        'time': TimePicker,
        'upload': Upload
    },
    initData() {
        const validateImg = (rule, files, callback) => {
            if (files === '') {
                callback(new Error('Please enter your password'));
            } else {
                callback();
            }
        };
        return {
            imgRules: [
                {validator: validateImg, trigger: 'blur'}
            ],
            date: new Date(),
            options: {
                disabledDate(date) {
                    const start = new Date('2018-02-09');

                    return date && (date.valueOf() >= Date.now() || date.valueOf() <= start.valueOf());
                }
            },
            cityList: [
                    {
                        value: 'beijing',
                        label: '北京市'
                    },
                    {
                        value: 'shanghai',
                        label: '上海市'
                    },
                    {
                        value: 'shenzhen',
                        label: '深圳市'
                    },
                    {
                        value: 'hangzhou',
                        label: '杭州市'
                    },
                    {
                        value: 'nanjing',
                        label: '南京市'
                    },
                    {
                        value: 'chongqing',
                        label: '重庆市'
                    }
                ],
            cityList2: [
                    {
                        value: 'xian',
                        label: '西安'
                    },
                    {
                        value: 'guangzhou',
                        label: '广州'
                    }
                ],
            model1: 'beijing',
            model2: 'shanghai',
            formValidate: {
                name: '',
                mail: '',
                city: '',
                gender: '',
                interest: [],
                date: '',
                time: '',
                desc: '',
                img: ''
            },
            ruleValidate: {
                name: [
                    { required: true, message: '姓名不能为空', trigger: 'blur' }
                ],
                mail: [
                    { required: true, message: '邮箱不能为空', trigger: 'blur' },
                    { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }
                ],
                city: [
                    { required: true, message: '请选择城市', trigger: 'change' }
                ],
                gender: [
                    { required: true, message: '请选择性别', trigger: 'change' }
                ],
                interest: [
                    { required: true, type: 'array', min: 1, message: '至少选择一个爱好', trigger: 'change' },
                    { type: 'array', max: 2, message: '最多选择两个爱好', trigger: 'change' }
                ],
                date: [
                    { required: true, type: 'date', message: '请选择日期', trigger: 'change' }
                ],
                time: [
                    { required: true, type: 'date', message: '请选择时间', trigger: 'change' }
                ],
                desc: [
                    { required: true, message: '请输入个人介绍', trigger: 'blur' },
                    { type: 'string', min: 20, message: '介绍不能少于20字', trigger: 'blur' }
                ],
                img: [
                    {validator: validateImg, trigger: 'blur'}
                ]
            }
        }
    },
    handleDate(date) {
        console.log(date);
    }
};
</script>

