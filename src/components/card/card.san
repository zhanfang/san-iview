<template>
    <div class="{{classes}}">
        <div class="{{headClasses}}" s-if="showTitle">
            <slot name="title"></slot>
        </div>
        <div class="{{extraClasses}}" s-if="showExtra">
            <slot name="extra"></slot>
        </div>
        <div class="{{bodyClasses}}" style="{{bodyStyles}}">
            <slot></slot>
        </div>
    </div>
</template>
<script>
import {DataTypes} from 'san';
import classNames from 'classnames';

const prefixCls = 'view-card';
const defaultPadding = 16;

export default {
    dataTypes: {
        bordered: DataTypes.bool,
        disHover: DataTypes.bool,
        shadow: DataTypes.bool,
        padding: DataTypes.number
    },
    initData() {
        return {
            bordered: true,
            disHover: false,
            shadow: false,
            padding: defaultPadding,
            showTitle: false,
            showExtra: false
        };
    },
    attached() {
        this.slotChildren.forEach(child => {
            if (child.name === 'title' && child.children.length > 0) {
                this.data.set('showTitle', true);
            }
            else if (child.name === 'extra' && child.children.length > 0) {
                this.data.set('showTitle', true);
            }
        });
    },
    computed: {
        classes() {
            return classNames([
                `${prefixCls}`,
                {
                    [`${prefixCls}-bordered`]: this.data.get('bordered') && !this.data.get('shadow'),
                    [`${prefixCls}-dis-hover`]: this.data.get('disHover') || this.data.get('shadow'),
                    [`${prefixCls}-shadow`]: this.data.get('shadow')
                }
            ]);
        },
        headClasses () {
            return `${prefixCls}-head`;
        },
        extraClasses () {
            return `${prefixCls}-extra`;
        },
        bodyClasses () {
            return `${prefixCls}-body`;
        },
        bodyStyles () {
            if (this.data.get('padding') !== defaultPadding) {
                return {
                    padding: `${this.data.get('padding')}px`
                };
            }
            return '';
        }
    },
};
</script>
