<template>
    <i-article>
        <article>
            <h1>Notice 通知提醒</h1>
            <anchor title="概述" h2></anchor>
            <p>在界面右上角显示可关闭的全局通知，常用于以下场景：</p>
            <ul>
                <li>通知内容带有描述信息</li>
                <li>系统主动推送</li>
            </ul>
            <anchor title="代码示例" h2></anchor>
            <demo title="基础用法">
                <div slot="demo">
                    <i-btn type="primary" on-select="open(false)">打开提醒</i-btn>
                    <i-btn on-select="open(true)">打开提醒（仅标题）</i-btn>
                </div>
                <div slot="desc">
                    <p>基本用法，默认在 4.5秒后关闭。如果 <code>desc</code> 参数为空或不填，则自动应用仅标题模式下的样式。</p>
                    <p>建议标题言简意赅，例如"删除成功"，更详细的内容可以放在描述信息里。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.open }}</i-code>
            </demo>
            <demo title="提醒类型">
                <div slot="demo">
                    <p>带描述信息</p>
                    <i-btn on-select="info(false)">消息</i-btn>
                    <i-btn on-select="success(false)">成功</i-btn>
                    <i-btn on-select="warning(false)">警告</i-btn>
                    <i-btn on-select="error(false)">错误</i-btn>
                    <p>仅标题</p>
                    <i-btn on-select="info(true)">消息</i-btn>
                    <i-btn on-select="success(true)">成功</i-btn>
                    <i-btn on-select="warning(true)">警告</i-btn>
                    <i-btn on-select="error(true)">错误</i-btn>
                </div>
                <div slot="desc">
                    <p>带有状态图标的提醒。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.type }}</i-code>
            </demo>
            <demo title="自定义时长">
                <div slot="demo">
                    <i-btn type="primary" on-select="time">打开提醒</i-btn>
                </div>
                <div slot="desc">
                    <p>自定义时长，为 0 则不自动关闭。也可以在<code>Notice.config()</code>中全局配置，详见API。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.time }}</i-code>
            </demo>
            <div class="api">
                <anchor title="API" h2></anchor>
                <anchor title="Notice instance" h3></anchor>
                <p>通过直接调用以下方法来使用组件：</p>
                <ul>
                    <li>
                        <code>Notice.open(config)</code>
                    </li>
                    <li>
                        <code>Notice.info(config)</code>
                    </li>
                    <li>
                        <code>Notice.success(config)</code>
                    </li>
                    <li>
                        <code>Notice.warning(config)</code>
                    </li>
                    <li>
                        <code>Notice.error(config)</code>
                    </li>
                </ul>
                <p>以上方法隐式地创建及维护Vue组件。参数 config 为对象，具体说明如下：</p>
                <table>
                    <thead>
                        <tr>
                            <th>属性</th>
                            <th>说明</th>
                            <th>类型</th>
                            <th>默认值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>title</td>
                            <td>通知提醒的标题</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>desc</td>
                            <td>通知提醒的内容，为空或不填时，自动应用仅标题模式下的样式</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>duration</td>
                            <td>自动关闭的延时，单位秒，不关闭可以写 0</td>
                            <td>Number</td>
                            <td>4.5</td>
                        </tr>
                        <tr>
                            <td>name</td>
                            <td>当前通知的唯一标识</td>
                            <td>String</td>
                            <td>自动</td>
                        </tr>
                        <tr>
                            <td>onClose(e)</td>
                            <td>关闭时的回调</td>
                            <td>Function</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>onClick(e)</td>
                            <td>点击主体面板时的回调</td>
                            <td>Function</td>
                            <td>-</td>
                        </tr>
                    </tbody>
                </table>
                <p>另外提供了全局配置、全局关闭某个通知和全局销毁的方法：</p>
                <ul>
                    <li>
                        <code>Notice.config(options)</code>
                    </li>
                    <li>
                        <code>Notice.close(name)</code>
                    </li>
                    <li>
                        <code>Notice.destroy()</code>
                    </li>
                </ul>
                <br>
                <i-code bg>{{ code.config }}</i-code>
                <br>
                <table>
                    <thead>
                        <tr>
                            <th>属性</th>
                            <th>说明</th>
                            <th>类型</th>
                            <th>默认值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>top</td>
                            <td>通知组件距离顶端的距离，单位像素</td>
                            <td>Number</td>
                            <td>24</td>
                        </tr>
                        <tr>
                            <td>duration</td>
                            <td>默认自动关闭的延时，单位秒</td>
                            <td>Number</td>
                            <td>4.5</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </article>
    </i-article>
</template>
<script>
    import Code from 'code/notice';
    import article from 'components/article';
    import anchor from 'components/anchor';
    import iCode from 'components/Code';
    import demo from 'components/demo';
    import {Icon, Row, Col, Input, Message, Button, Notice} from 'san-iview';

    export default {
        components: {
            'article': article,
            'i-code': iCode,
            'demo': demo,
            'anchor': anchor,
            'i-row': Row,
            'i-col': Col,
            'i-input': Input,
            'icon': Icon,
            'i-btn': Button,
            'notice': Notice
        },
        initData () {
            return {
                code: Code
            }
        },
            open (nodesc) {
                Notice.open({
                    title: '这是通知标题',
                    desc: nodesc ? '' : '这里是通知描述这里,是通知描述这里是通知描述这里,是通知描述这里,是通知描述这里是通知描述这里是通知描述'
                });
            },
            info (nodesc) {
                Notice.info({
                    title: '这是通知标题',
                    desc: nodesc ? '' : '这里是通知描述这里,是通知描述这里是通知描述这里,是通知描述这里,是通知描述这里是通知描述这里是通知描述'
                });
            },
            success (nodesc) {
                Notice.success({
                    title: '这是通知标题',
                    desc: nodesc ? '' : '这里是通知描述这里,是通知描述这里是通知描述这里,是通知描述这里,是通知描述这里是通知描述这里是通知描述'
                });
            },
            warning (nodesc) {
                Notice.warning({
                    title: '这是通知标题',
                    desc: nodesc ? '' : '这里是通知描述这里,是通知描述这里是通知描述这里,是通知描述这里,是通知描述这里是通知描述这里是通知描述'
                });
            },
            error (nodesc) {
                Notice.error({
                    title: '这是通知标题',
                    desc: nodesc ? '' : '这里是通知描述这里,是通知描述这里是通知描述这里,是通知描述这里,是通知描述这里是通知描述这里是通知描述'
                });
            },
            time () {
                Notice.open({
                    title: '这是通知标题',
                    desc: '这条通知不会自动关闭，需要点击关闭按钮才可以关闭。',
                    duration: 0,
                    closable: true
                });
            }
    }
</script>